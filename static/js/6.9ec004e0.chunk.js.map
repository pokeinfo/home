{"version":3,"sources":["components/SpeedChecker/PokemonInput.jsx","pokemon/calcRankEffect.js","pokemon/calcRealStatWithRank.js","components/SpeedChecker/SpeedResult.jsx","components/SpeedChecker/SpeedChecker.jsx"],"names":["speedItems","name","value","speedAbilities","rankList","Array","keys","map","n","selected","natureList","forEach","list","index","o","i","key","PokemonInput","title","onChange","useState","nature","setNature","level","setLevel","ev","setEV","iv","setIV","rank","setRank","item","setItem","ability","setAbility","useEffect","prevState","effect","SelectPokemon","pokemon","findPokemonByName","baseStat","stat","Grid","column","gap","v","LevelInput","placeholder","min","max","label","calcRankEffect","Math","floor","calcRealStatWithRank","calcRealStat","type","SpeedResult","myPokemon","enemyPokemon","numberToNature","number","down","up","getSpeedRealStat","realStat","my","enemy","className","Container","maxWidth","abs","getMessage","SpeedChecker","isMobileMediaQuery","window","setMyPokemon","setEnemyPokemon","matches","isMobile","setIsMobile","addListener","Title"],"mappings":"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","file":"static/js/6.9ec004e0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BoxContainer } from '../Container';\nimport { NumberInput, Select } from '../Input';\nimport Grid from '../Grid';\nimport SelectPokemon from '../Pokemon/SelectPokemon';\nimport LevelInput from '../Pokemon/LevelInput';\n\nimport { findPokemonByName } from '../../pokemon/data/pokedex';\n\nconst speedItems = [\n  {\n    name: \"아이템 영향없음\",\n    value: 1,\n  }, {\n    name: \"구애의 스카프 (X1.5)\",\n    value: 1.5,\n  }, {\n    name: \"스피드 파우더 (X2, 메타몽 전용)\",\n    value: 2,\n  },\n];\n\nconst speedAbilities = [\n  {\n    name: \"특성 영향없음\",\n    value: 0,\n  }, {\n    name: \"속보 (X1.5)\",\n    value: 1.5,\n  }, {\n    name: \"곡예 / 쓱쓱 / 엽록소 (X2)\",\n    value: 2,\n  }, {\n    name: \"슬로우 스타트 (X0.5)\",\n    value: 0.5,\n  },\n];\n\nconst rankList = [\n  ...Array(13).keys()\n].map(n => n - 6) // range(-6, 6)\n.map(n => ({\n  name: `${n} 랭크`,\n  value: n,\n  selected: !n,\n}));\n\nconst natureList = [\n  {\n    name: '스피드 무보정 성격',\n    value: 1\n  }, {\n    name: '스피드 상승 성격',\n    value: 1.1\n  }, {\n    name: '스피드 하락 성격',\n    value: 0.9\n  },\n];\n\n[\n  speedItems,\n  speedAbilities,\n  rankList,\n  natureList,\n].forEach((list, index) => {\n  list.forEach(\n    (o, i) => o.key = `Speed_Item_${index}_${i}`\n  );\n});\n\nconst PokemonInput = ({\n  title,\n  onChange,\n}) => {\n  const [ nature, setNature ] = useState(0);\n  const [ level, setLevel ] = useState(50);\n  const [ ev, setEV ] = useState();\n  const [ iv, setIV ] = useState();\n  const [ rank, setRank ] = useState(0);\n  const [ item, setItem ] = useState(1);\n  const [ ability, setAbility ] = useState(1);\n\n  const setPokemon = (pokemon) => {\n    pokemon = findPokemonByName(pokemon);\n    if (pokemon) onChange(prevState => ({\n      ...prevState,\n      baseStat: pokemon.stat[5],\n    }));\n  };\n\n  useEffect(() => {\n    onChange(prevState => ({\n      ...prevState,\n      nature,\n      level,\n      ev,\n      iv,\n      rank,\n      effect: item * ability,\n    }));\n  }, [\n    nature, level, ev, iv, rank, item, ability, onChange\n  ]);\n\n  return (\n    <BoxContainer>\n      <p>{title}</p>\n      <SelectPokemon onChange={setPokemon} />\n      <Grid column=\"3:2\" gap=\"1rem\">\n        <Select list={natureList} onChange={v => setNature(+v)} />\n        <LevelInput level={level} onChange={setLevel} />\n      </Grid>\n      <Grid column=\"1:1:1\" gap=\"1rem\">\n        <NumberInput\n          placeholder=\"노력치\"\n          min={0}\n          max={252}\n          onChange={setEV}\n        />\n        <NumberInput\n          placeholder=\"개체값\"\n          min={0}\n          max={31}\n          onChange={setIV}\n        />\n        <Select\n          label={\"랭크\"}\n          list={rankList}\n          onChange={v => setRank(+v)}\n        />\n      </Grid>\n      <Grid column=\"1:1\" gap=\"1rem\">\n        <Select list={speedItems} onChange={v => setItem(+v)} />\n        <Select list={speedAbilities} onChange={v => setAbility(+v)} />\n      </Grid>\n    </BoxContainer>\n  );\n};\n\nexport default PokemonInput;\n","const calcRankEffect = ({ stat, rank }) => {\n  const effect = ({\n    \"-6\": 25,\n    \"-5\": 29,\n    \"-4\": 33,\n    \"-3\": 40,\n    \"-2\": 50,\n    \"-1\": 66,\n    \"0\": 100,\n    \"1\": 150,\n    \"2\": 200,\n    \"3\": 250,\n    \"4\": 300,\n    \"5\": 350,\n    \"6\": 400,\n  })[rank];\n\n  return Math.floor((effect * stat) / 100);\n}\n\nexport default calcRankEffect;\n","import calcRealStat from './calcRealStat';\nimport calcRankEffect from './calcRankEffect';\n\nconst calcRealStatWithRank = ({\n  rank,\n  effect,\n  ...pokemon\n}) => {\n  return calcRankEffect({\n    rank,\n    stat: Math.floor(\n      effect * calcRealStat({\n        ...pokemon,\n        type: 'S',\n      })\n    )\n  });\n};\n\nexport default calcRealStatWithRank;\n","import React from 'react';\nimport Grid from '../Grid';\nimport Container from '../Container';\nimport { Box } from '../Container';\n\nimport calcRealStatWithRank from '../../pokemon/calcRealStatWithRank';\n\nfunction getMessage(realStat) {\n  const gap = Math.abs(realStat.my - realStat.enemy);\n  if (gap === 0)\n    return \"스피드 같음, 매턴 랜덤으로 선공 결정.\";\n\n  if (realStat.my > realStat.enemy)\n    return `+${gap} 추월 성공, 자신 포켓몬의 선공.`;\n\n  if (realStat.my < realStat.enemy)\n    return `-${gap} 추월 실패, 상대 포켓몬의 선공.`;\n\n  return \"값을 모두 입력해주세요...\";\n}\n\nconst SpeedResult = ({\n  myPokemon,\n  enemyPokemon,\n}) => {\n  const numberToNature = (number) => {\n    switch (number) {\n      case 0.9: return { down: 'S' };\n      case 1.1: return { up: 'S' };\n      default: return {};\n    }\n  };\n\n  const getSpeedRealStat = (pokemon) => {\n    return calcRealStatWithRank({\n      ...pokemon,\n      type: 'S',\n      nature: numberToNature(pokemon.nature),\n    });\n  };\n\n  const realStat = {\n    my: getSpeedRealStat(myPokemon),\n    enemy: getSpeedRealStat(enemyPokemon),\n  };\n\n  return (\n    <Box className=\"center\">\n      <Container maxWidth={330}>\n        <Grid Grid column=\"1:1:1\">\n            <p />\n            <p>종족값</p>\n            <p>실수치</p>\n\n            <p>자신</p>\n            <p>{myPokemon.baseStat || \"???\"}</p>\n            <p>{realStat.my || \"???\"}</p>\n\n            <p>상대</p>\n            <p>{enemyPokemon.baseStat || \"???\"}</p>\n            <p>{realStat.enemy || \"???\"}</p>\n        </Grid>\n      </Container>\n\n      <Container>\n        <p>{getMessage(realStat)}</p>\n      </Container>\n    </Box>\n  );\n};\n\nexport default SpeedResult;\n","import React, { useState, useEffect } from 'react';\nimport Container from '../Container';\nimport Title from '../Title';\nimport Grid from '../Grid';\n\nimport PokemonInput from './PokemonInput';\nimport SpeedResult from './SpeedResult';\n\nconst SpeedChecker = () => {\n  const { isMobileMediaQuery } = window;\n  const [ myPokemon, setMyPokemon ] = useState({});\n  const [ enemyPokemon, setEnemyPokemon ] = useState({});\n  const [ isMobile, setIsMobile ] = useState(isMobileMediaQuery.matches);\n\n  useEffect(() => {\n    isMobileMediaQuery.addListener(({ matches }) => {\n      setIsMobile(matches);\n    });\n  }, [ isMobileMediaQuery ]);\n\n  return (\n    <Container>\n      <Title>스피드 추월 계산기</Title>\n      <Grid column={isMobile? \"1\" : \"1:1\"} gap={isMobile? 0 : \"1rem\"}>\n        <PokemonInput title=\"내 포켓몬\" onChange={setMyPokemon} />\n        <PokemonInput title=\"상대 포켓몬\" onChange={setEnemyPokemon} />\n      </Grid>\n      <SpeedResult\n        myPokemon={myPokemon}\n        enemyPokemon={enemyPokemon}\n      />\n    </Container>\n  );\n}\n\nexport default SpeedChecker;\n"],"sourceRoot":""}