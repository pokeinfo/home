{"version":3,"sources":["scss/components/Pokemon/DynamaxButton.module.scss","scss/components/IVChecker/IVResult.module.scss","components/IVChecker/ThreeGrid.jsx","pokemon/data/nature.js","components/Pokemon/SelectNature.jsx","components/Pokemon/DynamaxButton.jsx","components/IVChecker/StatInput.jsx","components/IVChecker/IVResult.jsx","components/IVChecker/IVChecker.jsx"],"names":["module","exports","ThreeGrid","isDesktop","rest","Grid","column","gap","pokemonNatures","list","map","name","up","down","mapList","natureList","index","key","SelectNature","nature","onChange","placeholder","defaultValue","DynamaxButton","dynamax","className","classNames","styles","dynamaxButton","onClick","StatInput","stat","StatForm","type","statKey","setValue","newValue","ev","style","margin","min","realStat","max","getBaseStatFromPokemon","pokemon","baseStatKey","Array","from","indexOf","calcIV","level","baseStat","range","keys","validIVs","filter","iv","calcRealStat","pokemonIndex","length","minIV","Math","maxIV","getStatIVFull","IVResult","isMobile","findPokemonByName","findByName","ResultGrid","Result","props","params","children","resultGrid","desktopGrid","IVChecker","useState","setDynamax","setLevel","setPokemon","setNature","pokemonStat","setPokemonStat","isMobileMediaQuery","window","matches","setIsMobile","useEffect","addListener","Container","Title","SelectPokemon","LevelInput"],"mappings":"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","file":"static/js/5.0afba712.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dynamaxButton\":\"DynamaxButton_dynamaxButton__3mP4X\",\"dynamax\":\"DynamaxButton_dynamax__23-KM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IVResult\":\"IVResult_IVResult__2k_02\",\"resultGrid\":\"IVResult_resultGrid__276Xr\",\"desktopGrid\":\"IVResult_desktopGrid__jtgz0\"};","import React from 'react';\nimport Grid from '../Grid';\n\nconst ThreeGrid = ({\n  isDesktop,\n  ...rest\n}) => {\n  return (\n    <Grid column={isDesktop? \"1:1\" : \"3.5rem:1:1\"} gap=\"1rem\" {...rest} />\n  );\n};\n\nexport default ThreeGrid;\n","import findByName from '../../util/findByName';\n\nfunction mapList(...list) {\n  return list.map( ([ name, up, down ]) => ({ name, up, down }) );\n}\n\nexport function findNatureByName(name) {\n  return findByName(pokemonNatures, name);\n}\n\nconst pokemonNatures = mapList(\n  [ \"외로움\", \"A\", \"B\" ],\n  [ \"고집\", \"A\", \"C\" ],\n  [ \"개구쟁이\", \"A\", \"D\" ],\n  [ \"용감\", \"A\", \"S\" ],\n  [ \"대담한\", \"B\", \"A\" ],\n  [ \"장난꾸러기\", \"B\", \"C\" ],\n  [ \"촐랑\", \"B\", \"D\" ],\n  [ \"무사태평\", \"B\", \"S\" ],\n  [ \"조심\", \"C\", \"A\" ],\n  [ \"의젓\", \"C\", \"B\" ],\n  [ \"덜렁\", \"C\", \"D\" ],\n  [ \"냉정\", \"C\", \"S\" ],\n  [ \"차분\", \"D\", \"A\" ],\n  [ \"얌전\", \"D\", \"B\" ],\n  [ \"신중\", \"D\", \"C\" ],\n  [ \"건방\", \"D\", \"S\" ],\n  [ \"겁쟁이\", \"S\", \"A\" ],\n  [ \"성급\", \"S\", \"B\" ],\n  [ \"명랑\", \"S\", \"C\" ],\n  [ \"천진난만\", \"S\", \"D\" ],\n  [ \"수줍음\" ],\n  [ \"노력\" ],\n  [ \"온순\" ],\n  [ \"변덕\" ],\n  [ \"성실\" ],\n);\n\nexport default pokemonNatures;\n","import React from 'react';\nimport { ListInput } from '../Input';\n\nimport pokemonNatures from '../../pokemon/data/nature.js';\n\nconst natureList = pokemonNatures.map(({ name }, index) => ({\n  name,\n  key: index,\n}));\n\nconst SelectNature = ({ nature, onChange }) => (\n  <ListInput\n    placeholder=\"성격\"\n    defaultValue={nature}\n    list={natureList}\n    onChange={onChange}\n  />\n);\n\nexport default SelectNature;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from '../../scss/components/Pokemon/DynamaxButton.module.scss';\n\nconst DynamaxButton = ({\n  dynamax,\n  onChange,\n}) => {\n  function clickEvent() {\n    dynamax = !dynamax;\n    onChange(dynamax);\n  }\n  const className = classNames(\n    styles.dynamaxButton,\n    {\n      [styles.dynamax]: dynamax,\n    },\n  );\n  return (\n    <div\n      className={className}\n      onClick={clickEvent}\n    >\n      다이맥스 : {dynamax? \"\" : \"비\"}활성화\n    </div>\n  );\n};\n\nexport default DynamaxButton;\n","import React from 'react';\nimport { NumberInput } from '../Input';\n\nimport ThreeGrid from './ThreeGrid';\n\nconst StatInput = ({stat, onChange}) => {\n  const { StatForm } = StatInput;\n  return (\n    <div>\n      <StatForm name=\"HP\" type=\"H\" onChange={onChange} />\n      <StatForm name=\"공격\" type=\"A\" onChange={onChange} />\n      <StatForm name=\"방어\" type=\"B\" onChange={onChange} />\n      <StatForm name=\"특공\" type=\"C\" onChange={onChange} />\n      <StatForm name=\"특방\" type=\"D\" onChange={onChange} />\n      <StatForm name=\"스피드\" type=\"S\" onChange={onChange} />\n    </div>\n  );\n};\n\nStatInput.StatForm = ({\n  name,\n  statKey,\n  type,\n  onChange,\n}) => {\n  const setValue = (newValue) => onChange(\n    stat => ({\n      ...stat,\n      [ type ]: {\n        ev: 0,\n        ...stat[type],\n        ...newValue,\n      },\n    })\n  );\n\n  const setRealStat = realStat => setValue({ realStat });\n  const setEV = ev => setValue({ ev });\n\n  return (\n    <ThreeGrid>\n      <div style={{ margin: 'auto 0' }}>{name}</div>\n      <NumberInput\n        placeholder={name + \" 실수치\"}\n        min={1}\n        onChange={setRealStat}\n        className=\"center\"\n      />\n      <NumberInput\n        placeholder={name + \" 노력치\"}\n        defaultValue={0}\n        min={0}\n        max={252}\n        onChange={setEV}\n        className=\"center\"\n      />\n    </ThreeGrid>\n  );\n};\n\nexport default StatInput;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { VerticalCenterText } from '../Text';\n\nimport ThreeGrid from './ThreeGrid';\n\nimport styles from '../../scss/components/IVChecker/IVResult.module.scss';\n\nimport { findPokemonByName } from '../../pokemon/data/pokedex';\nimport { findNatureByName } from '../../pokemon/data/nature';\nimport calcRealStat from '../../pokemon/calcRealStat';\n\nfunction getBaseStatFromPokemon(type, pokemon) {\n  const baseStatKey = Array.from('HABCDS').indexOf(type);\n  const baseStat = pokemon.stat[baseStatKey];\n  return baseStat;\n}\n\nfunction calcIV(type, pokemon, dynamax, stat, nature, level) {\n  const defaultMessage = \"???\";\n  if (!pokemon || !nature || !level) return defaultMessage;\n  const baseStat = getBaseStatFromPokemon(type, pokemon);\n  stat = (stat || {})[type] || {};\n  const { ev, realStat } = stat;\n  const range = [ ...Array(32).keys() ];\n  const validIVs = !realStat? [] : range.filter(\n    iv => realStat === calcRealStat({\n      pokemonIndex: pokemon.index,\n      type,\n      iv,\n      ev,\n      dynamax,\n      level,\n      baseStat,\n      nature,\n    })\n  );\n\n  if (!validIVs.length) return defaultMessage;\n  const minIV = Math.min(...validIVs);\n  const maxIV = Math.max(...validIVs);\n  return (minIV === maxIV)? maxIV : `${minIV}~${maxIV}`;\n}\n\nfunction getStatIVFull(type, pokemon, dynamax, stat, nature, level) {\n  if (!pokemon || !nature || !level) return \"???\";\n  const baseStat = getBaseStatFromPokemon(type, pokemon);\n  stat = (stat || {})[type] || {};\n  let { ev } = stat;\n  ev = ev || 0;\n  return calcRealStat({\n    pokemonIndex: pokemon.index,\n    type,\n    iv: 31,\n    ev,\n    dynamax,\n    level,\n    baseStat,\n    nature,\n  });\n}\n\nconst IVResult = ({\n  pokemon,\n  dynamax,\n  stat,\n  nature,\n  level,\n  isMobile,\n}) => {\n  pokemon = findPokemonByName(pokemon);\n  nature = findNatureByName(nature);\n  const params = [ pokemon, dynamax, stat, nature, level ];\n  const {\n    ResultGrid,\n    Result,\n  } = IVResult;\n  const props = {\n    isMobile,\n    params,\n  };\n  return (\n    <div className={styles.IVResult}>\n      <ResultGrid {...props}>\n        <div />\n        <div>현재 개체값</div>\n        <div>V일때 실수치</div>\n      </ResultGrid>\n      <Result name=\"HP\" type=\"H\" {...props} />\n      <Result name=\"공격\" type=\"A\" {...props} />\n      <Result name=\"방어\" type=\"B\" {...props} />\n      <Result name=\"특공\" type=\"C\" {...props} />\n      <Result name=\"특방\" type=\"D\" {...props} />\n      <Result name=\"스피드\" type=\"S\" {...props} />\n    </div>\n  );\n};\n\nIVResult.ResultGrid = ({ children, isMobile }) => (\n  <ThreeGrid\n    isDesktop={!isMobile}\n    className={\n      classNames(styles.resultGrid, {\n        [styles.desktopGrid]: !isMobile,\n      })\n    }\n  >\n    {children}\n  </ThreeGrid>\n);\n\nIVResult.Result = ({ name, type, params, isMobile }) => {\n  const { ResultGrid } = IVResult;\n  params = [\n    type,\n    ...params,\n  ];\n  return (\n    <ResultGrid isMobile={isMobile}>\n      <VerticalCenterText>{name}</VerticalCenterText>\n      <div>{calcIV(...params)}</div>\n      <div>{getStatIVFull(...params)}</div>\n    </ResultGrid>\n  );\n}\n\nexport default IVResult;\n","import React, { useState, useEffect } from 'react';\nimport Grid from '../Grid';\nimport Container, { BoxContainer } from '../Container';\nimport Title from '../Title';\nimport { CenteredText } from '../Text';\n\nimport ThreeGrid from './ThreeGrid';\nimport SelectPokemon from '../Pokemon/SelectPokemon';\nimport SelectNature from '../Pokemon/SelectNature';\nimport LevelInput from '../Pokemon/LevelInput';\nimport DynamaxButton from '../Pokemon/DynamaxButton';\nimport StatInput from './StatInput';\nimport IVResult from './IVResult';\n\nconst IVChecker = () => {\n  const [ dynamax, setDynamax ] = useState(false);\n  const [ level, setLevel ] = useState();\n  const [ pokemon, setPokemon ] = useState();\n  const [ nature, setNature ] = useState();\n  const [ pokemonStat, setPokemonStat ] = useState({});\n  const { isMobileMediaQuery } = window;\n  const [ isMobile, setIsMobile ] = useState(isMobileMediaQuery.matches);\n\n  useEffect(() => {\n    isMobileMediaQuery.addListener(({ matches }) => {\n      setIsMobile(matches);\n    });\n  }, [ isMobileMediaQuery ]);\n\n  return (\n    <Container>\n      <Title>개체값 계산기</Title>\n      <Grid column={isMobile? \"1\" : \"1:1\"} gap={isMobile? \"0\" : \"1rem\"}>\n        <BoxContainer>\n          <div>\n            <SelectPokemon\n              pokemon={pokemon}\n              onChange={setPokemon}\n            />\n            <Grid column=\"3:2\" gap=\"1rem\">\n              <SelectNature\n                nature={nature}\n                onChange={setNature}\n              />\n              <LevelInput\n                level={level}\n                onChange={setLevel}\n              />\n            </Grid>\n            <DynamaxButton\n              dynamax={dynamax}\n              onChange={setDynamax}\n            />\n            <ThreeGrid>\n              <div />\n              <CenteredText>실수치</CenteredText>\n              <CenteredText>노력치</CenteredText>\n            </ThreeGrid>\n            <StatInput\n              stat={pokemonStat}\n              onChange={setPokemonStat}\n            />\n          </div>\n        </BoxContainer>\n        <BoxContainer>\n          <Title>결과</Title>\n          <IVResult\n            isMobile={isMobile}\n            pokemon={pokemon}\n            nature={nature}\n            stat={pokemonStat}\n            dynamax={dynamax}\n            level={level}\n          />\n        </BoxContainer>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default IVChecker;\n"],"sourceRoot":""}