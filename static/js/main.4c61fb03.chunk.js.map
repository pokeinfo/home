{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Input.jsx","components/Grid.jsx","components/Container.jsx","components/IVChecker/IVChecker.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Header","id","Footer","href","target","rel","Input","props","state","this","listID","datalistComponent","inputPrpos","input","createElement","list","Component","NumberInput","type","ListInput","Math","random","listItems","map","value","key","createGridStyle","column","row","gap","split","ratio","isNaN","join","gridTemplateColumns","gridTemplateRows","gridGap","Grid","children","className","style","Container","findByName","array","name","find","object","DynamaxButton","dynamax","onChange","onClick","StatInput","stat","statKey","useState","realState","ev","pokemonStat","setPokemonStat","eventHandler","event","newState","prevState","marginTop","marginBottom","placeholder","min","max","defaultValue","calcIV","pokemon","nature","level","range","Array","fill","e","i","baseStatKey","from","indexOf","baseStat","validIVs","index","filter","iv","floor","up","down","TypeError","length","minIV","maxIV","IVResult","pokedex","pokemonNatures","IVChecker","setDynamax","setLevel","setPokemon","setNature","getInputValue","pkm","set","H","A","B","C","D","S","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c61fb03.chunk.js","sourcesContent":["import React from 'react';\nimport '../css/Header.css';\n\nconst Header = () => (\n  <div>\n    <header>\n      <h1>Pok√® Info</h1>\n    </header>\n    <div id=\"header-safe-zone\" />\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport '../css/Footer.css';\n\nconst Footer = () => (\n  <footer>\n    <p>\n      <a\n        href=\"https://github.com/pokeinfo/home\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        View source on Github\n      </a>\n    </p>\n    <p id=\"copyright\">\n      Copyright 2019. Seung hyun Hwang, All rights reserved.\n    </p>\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component, createElement } from 'react';\nimport '../css/Input.css';\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = props;\n  }\n\n  render() {\n    const {\n      listID,\n      datalistComponent,\n    } = this.state;\n    const inputPrpos = { ...this.state };\n    delete inputPrpos.listID;\n    delete inputPrpos.datalistComponent;\n    const input = createElement('input', {\n      ...inputPrpos,\n      list: listID,\n    });\n    return (\n      <div>\n        {input}\n        {datalistComponent}\n      </div>\n    );\n  }\n}\n\nclass TextInput extends Input {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.state,\n      type: 'text',\n    };\n  }\n}\n\nclass NumberInput extends Input {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.state,\n      type: 'number',\n    };\n  }\n}\n\nclass ListInput extends Input {\n  constructor(props) {\n    super(props);\n    const listID = 'ListInputID' + Math.random();\n    const listItems = props.list.map(\n      value => <option value={value} key={'ListInputItem' + Math.random()} />\n    );\n    const datalistComponent = (\n      <datalist id={listID}>\n        {listItems}\n      </datalist>\n    );\n    this.state = {\n      ...this.state,\n      listID,\n      datalistComponent,\n    };\n  }\n}\n\nexport default Input;\nexport {\n  TextInput,\n  NumberInput,\n  ListInput,\n};\n","import React from 'react';\nimport '../css/Grid.css';\n\nfunction createGridStyle({column, row, gap}) {\n  [\n    column,\n    row,\n  ] = [\n    column,\n    row,\n  ].map(\n    value => (value || '').split(':').map(\n      ratio => isNaN(ratio)? ratio : `${ratio}fr`\n    ).join(' ')\n  );\n\n  return {\n    gridTemplateColumns: column,\n    gridTemplateRows: row,\n    gridGap: gap,\n  };\n}\n\nconst Grid = ({\n  children,\n  column,\n  row,\n  gap,\n}) => (\n  <div\n    className=\"grid\"\n    style={createGridStyle({column, row, gap})}\n  >\n    {children}\n  </div>\n);\n\nexport default Grid;\n","import { createElement } from 'react';\nimport '../css/Container.css';\n\nconst Container = (props) => {\n  let { className } = props;\n  className = (className || '') + ' container';\n  return createElement('div', {\n    ...props,\n    className,\n  });\n}\n\nexport default Container;\n","import React, { useState } from 'react';\nimport { NumberInput, ListInput } from '../Input';\nimport Grid from '../Grid';\nimport Container from '../Container';\n\nimport pokedex from '../../pokemon/pokedex.json';\nimport pokemonNatures from '../../pokemon/nature.json';\n\nimport '../../css/IVChecker/IVChecker.css';\n\nfunction findByName(array, name) {\n  return array.find(object => object.name === name);\n}\n\nconst DynamaxButton = ({\n  dynamax,\n  onChange,\n}) => {\n  function clickEvent() {\n    dynamax = !dynamax;\n    onChange(dynamax);\n  }\n  return (\n    <div\n      id=\"dynamax-button\"\n      className={dynamax? \"dynamax\" : \"\"}\n      onClick={clickEvent}\n    >\n      Îã§Ïù¥Îß•Ïä§ : {dynamax? \"\" : \"ÎπÑ\"}ÌôúÏÑ±Ìôî\n    </div>\n  );\n};\n\nconst StatInput = ({\n  stat,\n  statKey,\n  onChange,\n}) => {\n  const [ pokemonStat, setPokemonStat ] = useState({\n    realState: 0,\n    ev: 0,\n  });\n\n  const eventHandler = (key) => (event) => {\n    const value = +event.target.value;\n    let newState;\n    setPokemonStat(prevState => {\n      newState = { ...prevState };\n      newState[key] = value;\n      onChange(newState);\n      return newState;\n    });\n  };\n\n  return (\n    <Grid column=\"3.5rem:1:1\" gap=\"1rem\">\n      <div style={{\n        marginTop: 'auto',\n        marginBottom: 'auto',\n      }}>{stat}</div>\n      <NumberInput\n        placeholder={stat + \" Ïã§ÏàòÏπò\"}\n        min={1}\n        onChange={eventHandler('realState')}\n        className=\"center\"\n      />\n      <NumberInput\n        placeholder={stat + \" ÎÖ∏Î†•Ïπò\"}\n        min={0}\n        max={252}\n        defaultValue={pokemonStat.ev}\n        onChange={eventHandler('ev')}\n        className=\"center\"\n      />\n    </Grid>\n  );\n}\n\nfunction calcIV(type, pokemon, dynamax, stat, nature, level) {\n  const defaultMessage = \"???\";\n  if (!pokemon || !nature) return defaultMessage;\n  const range = Array(32).fill().map((e, i) => i);\n  const baseStatKey = Array.from('HABCDS').indexOf(type);\n  const baseStat = pokemon.state[baseStatKey];\n  stat = (stat || {})[type] || {};\n  let validIVs = [];\n  switch (type) {\n    case 'H':\n      if (pokemon.index === 292) {\n        // ÍªçÏßàÎ™¨Ïùò Í≤ΩÏö∞\n        if (stat.realState === 1) {\n          validIVs = range;\n        }\n      } else {\n        validIVs = range.filter(iv => {\n          return stat.realState === (dynamax? 2 : 1) * (\n              Math.floor(\n              (level / 100) * (\n                baseStat * 2\n                + iv\n                + Math.floor(stat.ev / 4)\n              )\n            ) + level + 10\n          );\n        });\n      }\n      break;\n\n    case 'A':\n    case 'B':\n    case 'C':\n    case 'D':\n    case 'S':\n      validIVs = range.filter(iv => {\n        return stat.realState === Math.floor(\n          Math.floor(\n            (level / 100) * (\n              baseStat * 2\n              + iv\n              + Math.floor(stat.ev / 4)\n            )\n            + 5\n          ) * (\n            nature.up === type\n              ? 1.1\n              : 1\n          ) * (\n            nature.down === type\n              ? 0.9\n              : 1\n          )\n        );\n      });\n      break;\n\n    default:\n      throw TypeError(\"Invalid type\");\n  }\n\n  if (!validIVs.length) return defaultMessage;\n  const minIV = Math.min(...validIVs);\n  const maxIV = Math.max(...validIVs);\n  return (minIV === maxIV)? maxIV : `${minIV}~${maxIV}`;\n}\n\nconst IVResult = ({\n  pokemon,\n  dynamax,\n  stat,\n  nature,\n  level,\n}) => {\n  pokemon = findByName(pokedex, pokemon);\n  nature = findByName(pokemonNatures, nature);\n  return (\n    <Container>\n      <Grid column=\"1:3\">\n        <div>HP</div>\n        <div>{calcIV('H', pokemon, dynamax, stat, nature, level)}</div>\n      </Grid>\n      <Grid column=\"1:3\">\n        <div>Í≥µÍ≤©</div>\n        <div>{calcIV('A', pokemon, dynamax, stat, nature, level)}</div>\n      </Grid>\n      <Grid column=\"1:3\">\n        <div>Î∞©Ïñ¥</div>\n        <div>{calcIV('B', pokemon, dynamax, stat, nature, level)}</div>\n      </Grid>\n      <Grid column=\"1:3\">\n        <div>ÌäπÍ≥µ</div>\n        <div>{calcIV('C', pokemon, dynamax, stat, nature, level)}</div>\n      </Grid>\n      <Grid column=\"1:3\">\n        <div>ÌäπÎ∞©</div>\n        <div>{calcIV('D', pokemon, dynamax, stat, nature, level)}</div>\n      </Grid>\n      <Grid column=\"1:3\">\n        <div>Ïä§ÌîºÎìú</div>\n        <div>{calcIV('S', pokemon, dynamax, stat, nature, level)}</div>\n      </Grid>\n    </Container>\n  );\n};\n\nconst IVChecker = () => {\n  const [ dynamax, setDynamax ] = useState(false);\n  const [ level, setLevel ] = useState();\n  const [ pokemon, setPokemon ] = useState();\n  const [ nature, setNature ] = useState();\n  const [ pokemonStat, setPokemonStat ] = useState({});\n\n  function getInputValue(event) {\n    return event.target.value;\n  }\n\n  return (\n    <Container id=\"iv-checker\">\n      <h2>Í∞úÏ≤¥Í∞í Í≥ÑÏÇ∞Í∏∞</h2>\n      <div>\n        <ListInput\n          placeholder=\"Ìè¨ÏºìÎ™¨ Ïù¥Î¶Ñ\"\n          list={pokedex.map(pkm => pkm.name)}\n          onChange={event => setPokemon(getInputValue(event))}\n        />\n        <Grid column=\"3:2\" gap=\"1rem\">\n          <ListInput\n            placeholder=\"ÏÑ±Í≤©\"\n            list={pokemonNatures.map(nature => nature.name)}\n            onChange={event => setNature(getInputValue(event))}\n          />\n          <NumberInput\n            placeholder=\"Î†àÎ≤®\"\n            min={1}\n            max={100}\n            onChange={event => setLevel(+getInputValue(event))}\n          />\n        </Grid>\n        <DynamaxButton\n          dynamax={dynamax}\n          onChange={dynamax => setDynamax(dynamax)}\n        />\n        <div>\n          <Grid column=\"3.5rem:1:1\" gap=\"1rem\">\n            <div />\n            <div className=\"center\">Ïã§ÏàòÏπò</div>\n            <div className=\"center\">ÎÖ∏Î†•Ïπò</div>\n          </Grid>\n          <StatInput\n            stat=\"HP\"\n            onChange={set => setPokemonStat(pokemonStat => ({\n              ...pokemonStat,\n              H: set,\n            }))}\n          />\n          <StatInput\n            stat=\"Í≥µÍ≤©\"\n            onChange={set => setPokemonStat(pokemonStat => ({\n              ...pokemonStat,\n              A: set,\n            }))}\n          />\n          <StatInput\n            stat=\"Î∞©Ïñ¥\"\n            onChange={set => setPokemonStat(pokemonStat => ({\n              ...pokemonStat,\n              B: set,\n            }))}\n          />\n          <StatInput\n            stat=\"ÌäπÍ≥µ\"\n            onChange={set => setPokemonStat(pokemonStat => ({\n              ...pokemonStat,\n              C: set,\n            }))}\n          />\n          <StatInput\n            stat=\"ÌäπÎ∞©\"\n            onChange={set => setPokemonStat(pokemonStat => ({\n              ...pokemonStat,\n              D: set,\n            }))}\n          />\n          <StatInput\n            stat=\"Ïä§ÌîºÎìú\"\n            onChange={set => setPokemonStat(pokemonStat => ({\n              ...pokemonStat,\n              S: set,\n            }))}\n          />\n        </div>\n      </div>\n      <IVResult\n        pokemon={pokemon}\n        nature={nature}\n        stat={pokemonStat}\n        dynamax={dynamax}\n        level={level}\n      />\n    </Container>\n  );\n};\n\nexport default IVChecker;\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport IVChecker from './components/IVChecker/IVChecker';\nimport './css/App.css';\nimport './css/content.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <IVChecker />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}